Thu May  5 00:55:45 UTC 2022: 
 heap.c | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)
 tests:  0|4
total_score: 0/70
9ac5c7d
Thu May  5 00:56:15 UTC 2022: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  0|0
cebbc70
Thu May  5 00:57:02 UTC 2022: 
 heap.c | 2 ++
 1 file changed, 2 insertions(+)
 tests:  0|0
1d26746
Thu May  5 00:58:22 UTC 2022: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  1|3
total_score: 10/70
74521ab
Thu May  5 01:00:26 UTC 2022: 
 heap.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)
In file included from test.c:4:0:
heap.c: In function ‘heap_top’:
heap.c:23:19: error: invalid type argument of ‘->’ (have ‘heapElem {aka struct nodo}’)
     return dato[0]->data;
                   ^~
heap.c:24:1: error: control reaches end of non-void function [-Werror=return-type]
 }
 ^
cc1: all warnings being treated as errors
Compilation failed
8cffc3d
Thu May  5 01:00:37 UTC 2022: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  1|3
total_score: 10/70
32ffc1d
Thu May  5 01:01:45 UTC 2022: 
 heap.c | 4 ++++
 1 file changed, 4 insertions(+)
 tests:  1|3
total_score: 10/70
9d8dda7
Thu May  5 01:03:05 UTC 2022: 
 heap.c | 6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)
In file included from test.c:4:0:
heap.c: In function ‘heap_top’:
heap.c:23:11: error: ‘Heap {aka struct Heap}’ has no member named ‘hearArray’; did you mean ‘heapArray’?
   if (pq->hearArray == NULL) return NULL;
           ^~~~~~~~~
           heapArray
heap.c:25:14: error: ‘Heap {aka struct Heap}’ has no member named ‘hearArray’; did you mean ‘heapArray’?
   return pq->hearArray[0].data;
              ^~~~~~~~~
              heapArray
heap.c:26:1: error: control reaches end of non-void function [-Werror=return-type]
 }
 ^
cc1: all warnings being treated as errors
Compilation failed
958b1eb
Thu May  5 01:03:22 UTC 2022: 
 heap.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
 tests:  1|3
total_score: 10/70
b1812da
Thu May  5 01:03:54 UTC 2022: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:0:
heap.c: In function ‘heap_top’:
heap.c:23:24: error: invalid operands to binary == (have ‘heapElem {aka struct nodo}’ and ‘void *’)
   if (pq->heapArray[0] == NULL) return NULL;
       ~~~~~~~~~~~~~~~~ ^~
Compilation failed
b7511f1
Thu May  5 01:04:12 UTC 2022: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  1|3
total_score: 10/70
c303ddd
Thu May  5 01:05:08 UTC 2022: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  2|2
total_score: 20/70
9c947f0
Thu May  5 01:05:25 UTC 2022: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  2|2
total_score: 20/70
2e22547
Thu May  5 01:25:14 UTC 2022: 
 heap.c | 30 ++++++++++++++++++++++++++++++
 1 file changed, 30 insertions(+)
In file included from test.c:4:0:
heap.c: In function ‘heap_pop’:
heap.c:42:29: error: incompatible types when assigning to type ‘heapElem {aka struct nodo}’ from type ‘void *’
   pq->heapArray[pq->size-1] = NULL;
                             ^
Compilation failed
75e3692
Thu May  5 01:25:52 UTC 2022: 
 heap.c | 1 -
 1 file changed, 1 deletion(-)
 tests:  2|2
total_score: 35/70
4367a43
Thu May  5 01:32:07 UTC 2022: 
 heap.c | 4 ++++
 1 file changed, 4 insertions(+)
 tests:  2|2
total_score: 35/70
7399a25
Thu May  5 01:42:20 UTC 2022: 
 heap.c | 1 +
 1 file changed, 1 insertion(+)
In file included from test.c:4:0:
heap.c: In function ‘heap_pop’:
heap.c:42:8: error: incompatible type for argument 1 of ‘free’
   free(pq->heapArray[pq->size-1]);
        ^~
In file included from test.c:2:0:
/usr/include/stdlib.h:563:13: note: expected ‘void *’ but argument is of type ‘heapElem {aka struct nodo}’
 extern void free (void *__ptr) __THROW;
             ^~~~
Compilation failed
01e2105
Thu May  5 01:44:08 UTC 2022: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:0:
heap.c: In function ‘heap_pop’:
heap.c:42:29: error: incompatible types when assigning to type ‘heapElem {aka struct nodo}’ from type ‘void *’
   pq->heapArray[pq->size-1] = NULL;
                             ^
Compilation failed
8ccd1aa
Thu May  5 01:44:21 UTC 2022: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  2|2
total_score: 35/70
103e4ad
Thu May  5 01:45:46 UTC 2022: 
 heap.c | 1 +
 1 file changed, 1 insertion(+)
 tests:  2|2
total_score: 35/70
6197e32
Thu May  5 01:46:50 UTC 2022: 
 heap.c | 6 ------
 1 file changed, 6 deletions(-)
 tests:  2|2
total_score: 35/70
620cacf
Thu May  5 02:39:19 UTC 2022: 
 heap.c | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)
In file included from test.c:4:0:
heap.c: In function ‘resizeHeap’:
heap.c:21:11: error: ‘Heap {aka struct Heap}’ has no member named ‘headArray’; did you mean ‘heapArray’?
   if (pq->headArray == NULL) return;
           ^~~~~~~~~
           heapArray
heap.c:21:30: error: ‘return’ with no value, in function returning non-void [-Werror]
   if (pq->headArray == NULL) return;
                              ^~~~~~
heap.c:19:7: note: declared here
 void* resizeHeap(Heap* pq){
       ^~~~~~~~~~
heap.c:23:1: error: control reaches end of non-void function [-Werror=return-type]
 }
 ^
cc1: all warnings being treated as errors
Compilation failed
8178886
Thu May  5 02:39:52 UTC 2022: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:0:
heap.c: In function ‘resizeHeap’:
heap.c:21:11: error: ‘Heap {aka struct Heap}’ has no member named ‘headArray’; did you mean ‘heapArray’?
   if (pq->headArray == NULL) exit(1);
           ^~~~~~~~~
           heapArray
heap.c:23:1: error: control reaches end of non-void function [-Werror=return-type]
 }
 ^
cc1: all warnings being treated as errors
Compilation failed
bed118b
Thu May  5 02:40:04 UTC 2022: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:0:
heap.c: In function ‘resizeHeap’:
heap.c:23:1: error: control reaches end of non-void function [-Werror=return-type]
 }
 ^
cc1: all warnings being treated as errors
Compilation failed
7c88eb7
Thu May  5 02:40:40 UTC 2022: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  2|2
total_score: 35/70
bc71240
Thu May  5 02:54:41 UTC 2022: 
 heap.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)
 tests:  2|2
total_score: 35/70
fcee5b1
Thu May  5 03:33:35 UTC 2022: 
 heap.c | 27 ++++++++++++++++++++++++++-
 1 file changed, 26 insertions(+), 1 deletion(-)
In file included from test.c:4:0:
heap.c: In function ‘Intercambia’:
heap.c:20:16: error: invalid type argument of ‘->’ (have ‘Heap {aka struct Heap}’)
     int aux = h->heapArray[i1].priority;
                ^~
heap.c:21:19: error: invalid type argument of ‘->’ (have ‘Heap {aka struct Heap}’)
     void* data = h->heapArray[i1].data;
                   ^~
heap.c:23:6: error: invalid type argument of ‘->’ (have ‘Heap {aka struct Heap}’)
     h->heapArray[i1].priority = h->heapArray[i2].priority;
      ^~
heap.c:23:34: error: invalid type argument of ‘->’ (have ‘Heap {aka struct Heap}’)
     h->heapArray[i1].priority = h->heapArray[i2].priority;
                                  ^~
heap.c:24:5: error: invalid type argument of ‘->’ (have ‘Heap {aka struct Heap}’)
    h->heapArray[i1].data = h->heapArray[i2].data;
     ^~
heap.c:24:29: error: invalid type argument of ‘->’ (have ‘Heap {aka struct Heap}’)
    h->heapArray[i1].data = h->heapArray[i2].data;
                             ^~
heap.c:26:6: error: invalid type argument of ‘->’ (have ‘Heap {aka struct Heap}’)
     h->heapArray[i2].priority = aux;
      ^~
heap.c:27:4: error: invalid type argument of ‘->’ (have ‘Heap {aka struct Heap}’)
   h->heapArray[i2].data = data;
    ^~
heap.c: In function ‘Subir’:
heap.c:37:21: error: invalid type argument of ‘->’ (have ‘Heap {aka struct Heap}’)
     while(i > 0 && h->heapArray[i].priority > h->heapArray[padre=father(h, i)].priority) {
                     ^~
heap.c:37:48: error: invalid type argument of ‘->’ (have ‘Heap {aka struct Heap}’)
     while(i > 0 && h->heapArray[i].priority > h->heapArray[padre=father(h, i)].priority) {
                                                ^~
heap.c: In function ‘heap_push’:
heap.c:62:3: error: implicit declaration of function ‘subir’; did you mean ‘Subir’? [-Werror=implicit-function-declaration]
   subir (pq, priority);
   ^~~~~
   Subir
cc1: all warnings being treated as errors
Compilation failed
d5e0fb2
Thu May  5 03:33:46 UTC 2022: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:0:
heap.c: In function ‘Intercambia’:
heap.c:20:16: error: invalid type argument of ‘->’ (have ‘Heap {aka struct Heap}’)
     int aux = h->heapArray[i1].priority;
                ^~
heap.c:21:19: error: invalid type argument of ‘->’ (have ‘Heap {aka struct Heap}’)
     void* data = h->heapArray[i1].data;
                   ^~
heap.c:23:6: error: invalid type argument of ‘->’ (have ‘Heap {aka struct Heap}’)
     h->heapArray[i1].priority = h->heapArray[i2].priority;
      ^~
heap.c:23:34: error: invalid type argument of ‘->’ (have ‘Heap {aka struct Heap}’)
     h->heapArray[i1].priority = h->heapArray[i2].priority;
                                  ^~
heap.c:24:5: error: invalid type argument of ‘->’ (have ‘Heap {aka struct Heap}’)
    h->heapArray[i1].data = h->heapArray[i2].data;
     ^~
heap.c:24:29: error: invalid type argument of ‘->’ (have ‘Heap {aka struct Heap}’)
    h->heapArray[i1].data = h->heapArray[i2].data;
                             ^~
heap.c:26:6: error: invalid type argument of ‘->’ (have ‘Heap {aka struct Heap}’)
     h->heapArray[i2].priority = aux;
      ^~
heap.c:27:4: error: invalid type argument of ‘->’ (have ‘Heap {aka struct Heap}’)
   h->heapArray[i2].data = data;
    ^~
heap.c: In function ‘subir’:
heap.c:37:21: error: invalid type argument of ‘->’ (have ‘Heap {aka struct Heap}’)
     while(i > 0 && h->heapArray[i].priority > h->heapArray[padre=father(h, i)].priority) {
                     ^~
heap.c:37:48: error: invalid type argument of ‘->’ (have ‘Heap {aka struct Heap}’)
     while(i > 0 && h->heapArray[i].priority > h->heapArray[padre=father(h, i)].priority) {
                                                ^~
heap.c: In function ‘heap_push’:
heap.c:62:10: error: incompatible type for argument 1 of ‘subir’
   subir (pq, priority);
          ^~
heap.c:34:6: note: expected ‘Heap {aka struct Heap}’ but argument is of type ‘Heap * {aka struct Heap *}’
 void subir(Heap h, int i) {
      ^~~~~
Compilation failed
966643b
Thu May  5 03:34:14 UTC 2022: 
 heap.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)
 tests:  0|0
d2dd07d
Thu May  5 03:35:06 UTC 2022: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  0|0
3bc1beb
Thu May  5 03:35:33 UTC 2022: 
 heap.c | 1 +
 1 file changed, 1 insertion(+)
 tests:  2|2
total_score: 35/70
6eb6aeb
Thu May  5 03:35:44 UTC 2022: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  2|2
total_score: 35/70
6f26d91
Thu May  5 03:36:07 UTC 2022: 
 heap.c | 1 +
 1 file changed, 1 insertion(+)
 tests:  3|2
total_score: 40/70
920c194
Thu May  5 03:47:38 UTC 2022: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  3|2
total_score: 40/70
c59cd44
Thu May  5 03:48:14 UTC 2022: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  6|2
total_score: 50/70
3166b19
Thu May  5 03:52:54 UTC 2022: 
 heap.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
In file included from test.c:4:0:
heap.c: In function ‘subir’:
heap.c:37:20: error: ‘h’ undeclared (first use in this function)
     while(i > 0 && h->heapArray[i].priority > h->heapArray[padre=father(i)].priority) {
                    ^
heap.c:37:20: note: each undeclared identifier is reported only once for each function it appears in
heap.c:37:73: error: passing argument 1 of ‘father’ makes pointer from integer without a cast [-Werror=int-conversion]
     while(i > 0 && h->heapArray[i].priority > h->heapArray[padre=father(i)].priority) {
                                                                         ^
heap.c:30:5: note: expected ‘Heap * {aka struct Heap *}’ but argument is of type ‘int’
 int father(Heap* h, int i) {
     ^~~~~~
heap.c:37:66: error: too few arguments to function ‘father’
     while(i > 0 && h->heapArray[i].priority > h->heapArray[padre=father(i)].priority) {
                                                                  ^~~~~~
heap.c:30:5: note: declared here
 int father(Heap* h, int i) {
     ^~~~~~
heap.c: In function ‘heap_push’:
heap.c:63:10: error: passing argument 1 of ‘subir’ makes integer from pointer without a cast [-Werror=int-conversion]
   subir (pq, pq->size);
          ^~
heap.c:34:6: note: expected ‘int’ but argument is of type ‘Heap * {aka struct Heap *}’
 void subir(int i) {
      ^~~~~
heap.c:63:3: error: too many arguments to function ‘subir’
   subir (pq, pq->size);
   ^~~~~
heap.c:34:6: note: declared here
 void subir(int i) {
      ^~~~~
cc1: all warnings being treated as errors
Compilation failed
3880735
Thu May  5 03:53:11 UTC 2022: 
 heap.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
 tests:  6|2
total_score: 50/70
2ad1dab
Thu May  5 03:58:52 UTC 2022: 
 heap.c | 17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)
In file included from test.c:4:0:
heap.c: In function ‘subir’:
heap.c:48:21: error: invalid type argument of ‘->’ (have ‘heapElem {aka struct nodo}’)
       if (arreglo[i]->priority > arreglo[padre=father(h, i)]->priority){
                     ^~
heap.c:48:61: error: invalid type argument of ‘->’ (have ‘heapElem {aka struct nodo}’)
       if (arreglo[i]->priority > arreglo[padre=father(h, i)]->priority){
                                                             ^~
Compilation failed
91204dc
Thu May  5 03:59:02 UTC 2022: 
 heap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  6|2
total_score: 50/70
6c47699
